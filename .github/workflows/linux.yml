name: Linux

on:
  push:
    branches:
      - master
      - dev

jobs:
  ALL:
    env:
      IMAGE_PATH: tarmio/builders:${{ matrix.docker_image }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        build_tool:
          - make
          #- ninja
        build_type:
          - 'Debug'
          #- 'Release'
        docker_image:
          - ubuntu14.04-gcc4.8.4-boost1.55-cmake3.10.3-gtest1.10.0-openssl1.0.1f
          - ubuntu16.04-gcc5.4.0-boost1.70-cmake3.5.1-gtest1.8.1-openssl1.0.2g
          - ubuntu18.04-gcc7.5.0-boost1.65-cmake3.10.2-gtest1.10.0-openssl1.1.1
          - ubuntu20.04-gcc9.3.0-boost1.71-cmake3.16.3-gtest1.10.0-openssl1.1.1g
          - ubuntu20.04-gcc9.3.0-boost1.71-cmake3.16.3-gtest1.10.0 # build without OpenSSL
          - centos7.6.1810-gcc4.8.5-boost1.70-cmake3.15.6-gtest1.8.1-openssl1.1.0
          - alpine3.9.6-gcc8.3.0-boost1.67-cmake3.13.0-gtest1.8.1-openssl1.1.1g

    steps:
    - uses: actions/checkout@v2
    - name: docker pull
      run: docker pull ${IMAGE_PATH}
    - name: define CMake generator
      run: |
        export TARM_IO_CMAKE_GENERATOR="Unix Makefiles"
        if [ ${{ matrix.build_tool }} == "ninja" ]; then export TARM_IO_CMAKE_GENERATOR="Ninja"; fi
    - name: build
      run: |
        ./scripts/execute_in_docker.bash ${IMAGE_PATH} \
          "mkdir -p build && \
           cd build && \
           cmake -G "${TARM_IO_CMAKE_GENERATOR}" -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DTARM_IO_BUILD_TESTS=TRUE .. && \
           ${{ matrix.build_tool }} -j$(nproc)"
    - name: run tests
      run: |
        ./scripts/execute_in_docker.bash ${IMAGE_PATH} \
          "cd build && \
           ${{ matrix.build_tool }} RunTests"
    - name: lib install, build and run examples
      run: |
        ./scripts/execute_in_docker.bash ${IMAGE_PATH} \
          "cd build && \
           sudo ${{ matrix.build_tool }} install && \
           cd ../examples && \
           mkdir -p build && \
           cd build && \
           cmake -G "${TARM_IO_CMAKE_GENERATOR}" -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} .. && \
           ${{ matrix.build_tool }} -j$(nproc) && \
           ./hello_event_loop/hello_event_loop"
