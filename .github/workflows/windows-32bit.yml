#----------------------------------------------------------------------------------------------
#  Copyright (c) 2020 - present Alexander Voitenko
#  Licensed under the MIT License. See License.txt in the project root for license information.
#----------------------------------------------------------------------------------------------

name: Windows-32bit

on:
  push:
    branches:
      - master
      - dev

jobs:
  MSVC:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - 'windows-2016'
          - 'windows-2019'
        config:
          - 'Debug'
          #- 'Release'

    steps:
    - uses: actions/checkout@v2
    - uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x86
    - name: minimal build (no dependencies)
      run: |
        cmake --version
        mkdir minimal_build
        cd minimal_build
        cmake -DCMAKE_VS_PLATFORM_TOOLSET_HOST_ARCHITECTURE=x86 `
              -DCMAKE_GENERATOR_PLATFORM=Win32 `
              ..
        cmake --build . --config ${{ matrix.config }}
    - name: minimal lib install, build and run examples
      run: |
        cd minimal_build
        cmake --install . --config ${{ matrix.config }} --prefix $env:GITHUB_WORKSPACE\tarm-io_minimal_install
        cd ..\examples
        mkdir minimal_build
        cd minimal_build
        cmake -DCMAKE_VS_PLATFORM_TOOLSET_HOST_ARCHITECTURE=x86 `
              -DCMAKE_GENERATOR_PLATFORM=Win32 `
              -DCMAKE_PREFIX_PATH="$env:GITHUB_WORKSPACE\tarm-io_minimal_install" `
              ..
        cmake --build . --config ${{ matrix.config }}
        .\hello_event_loop\${{ matrix.config }}\hello_event_loop.exe
    - name: install OpenSSL
      run: |
        pushd $env:TEMP
        curl -LO https://www.openssl.org/source/openssl-1.1.1g.tar.gz
        tar -xf openssl-1.1.1g.tar.gz
        cd openssl-1.1.1g
        perl Configure VC-WIN32 no-asm no-tests --prefix="$env:GITHUB_WORKSPACE/OpenSSL-Win32"
        set CL=/MP
        nmake
        nmake install
    #- name: install gtest
    #  run: |
    #    pushd $env:TEMP
    #    curl -LO https://github.com/google/googletest/archive/release-1.10.0.tar.gz
    #    tar -xf release-1.10.0.tar.gz
    #    cd googletest-release-1.10.0
    #    mkdir build
    #    cd build/
    #    cmake -DBUILD_SHARED_LIBS=ON `
    #          -DCMAKE_VS_PLATFORM_TOOLSET_HOST_ARCHITECTURE=x86 `
    #          -DCMAKE_GENERATOR_PLATFORM=Win32 `
    #          ..
    #    cmake --build . --config ${{ matrix.config }}
    #    cmake --install . --verbose --config ${{ matrix.config }} --prefix $env:GITHUB_WORKSPACE/gtest_install
    #    popd
    - name: build
      run: |
        mkdir build
        cd build
        cmake -DTARM_IO_BUILD_TESTS=TRUE `
              -DCMAKE_VS_PLATFORM_TOOLSET_HOST_ARCHITECTURE=x86 `
              -DCMAKE_GENERATOR_PLATFORM=Win32 `
              -DBOOST_ROOT="$env:BOOST_ROOT_1_72_0" `
              -DBoost_USE_MULTITHREADED=ON `
              -DBoost_USE_STATIC_RUNTIME=OFF `
              -DGTEST_ROOT="$env:GITHUB_WORKSPACE/gtest_install" `
              -DOPENSSL_ROOT_DIR="$env:GITHUB_WORKSPACE/OpenSSL-Win32" `
              ..
        cmake --build . --config ${{ matrix.config }}
    - name: run tests
      run: |
        cd build
        ls .\tests\${{ matrix.config }}
        .\tests\${{ matrix.config }}\tests.exe
